A password complexity checker helps ensure users create strong, secure passwords.

def password_strength(password):
    score = 0
    remarks = []
    
    # Length check
    if len(password) >= 12:
        score += 3
    elif len(password) >= 8:
        score += 2
    elif len(password) >= 6:
        score += 1
    else:
        remarks.append("Password too short")
    
    # Character variety
    has_upper = any(c.isupper() for c in password)
    has_lower = any(c.islower() for c in password)
    has_digit = any(c.isdigit() for c in password)
    has_special = any(not c.isalnum() for c in password)
    
    if has_upper: score += 1
    if has_lower: score += 1
    if has_digit: score += 1
    if has_special: score += 2
    
    # Common password check (simplified)
    common_passwords = ["password", "123456", "qwerty"]
    if password.lower() in common_passwords:
        score = 0
        remarks.append("Password is too common")
    
    # Determine strength
    if score >= 7:
        strength = "Strong"
    elif score >= 4:
        strength = "Medium"
    else:
        strength = "Weak"
    
    return {
        "strength": strength,
        "score": score,
        "remarks": remarks
    }
